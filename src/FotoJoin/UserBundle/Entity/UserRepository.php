<?php

namespace FotoJoin\UserBundle\Entity;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function getUsersByCategories($categories)
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('u')
            ->from('FotoJoinUserBundle:User', 'u')
            ->leftJoin('FotoJoinControlPanelBundle:Photography', 'ph', 'WITH', 'ph.user = u.id')
            ->leftJoin('ph.categories', 'c')
        ;

        $parameters = array();

        if($categories != NULL && !empty($categories)) {
            $qb->where('c.id IN (:categories)');
            $parameters['categories'] =  $categories;
        }

        $qb->groupBy('u.id')->setParameters($parameters);

        return $qb;
    }
    public function getUsersByCitiesCategories($cities, $categories)
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('u as user')
            ->addSelect('AVG(ap.value) as average')
            ->from('FotoJoinUserBundle:User', 'u')
            ->leftJoin('u.photographies', 'ph')
            ->leftJoin('ph.appraisements', 'ap')
            ->leftJoin('ph.categories', 'c')
            ->leftJoin('u.city1', 'c1')
            ->leftJoin('u.city2', 'c2')
            ->leftJoin('u.city3', 'c3')
            ->andWhere('(c1.id IN (:cities)) OR (c2.id IN (:cities)) OR (c3.id IN (:cities))')
            ->andWhere('c.id IN (:categories)')
            ->groupBy('u.id')
            ->orderBy('average', 'DESC')
            ->setParameters(array('cities' => $cities, 'categories' => $categories))
        ;
//        dump($qb->getQuery()->getResult());

/*
        $parameters = array();

        if($cities != NULL && !empty($cities)) {
            $qb->andWhere('(c1.id IN (:cities)) OR (c2.id IN (:cities)) OR (c3.id IN (:cities))');
            $parameters['cities'] =  $cities;
        }

        if($categories != NULL && !empty($categories)) {
            $qb->andWhere('c.id IN (:categories)');
            $parameters['categories'] =  $categories;
        }

        $qb->groupBy('u.id')->setParameters($parameters);
*/
        return $qb;
    }
}
